// <auto-generated />
using System;
using ArmyProjectSecondTry.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace ArmyProjectSecond.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    partial class ApplicationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ArmyProjectSecond.Models.Armours.Armour", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Armours");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "+1 Armour",
                            Name = "Light Armour"
                        },
                        new
                        {
                            Id = 2,
                            Description = "+2 Armour",
                            Name = "Heavy Armour"
                        },
                        new
                        {
                            Id = 3,
                            Description = "+3 Armour",
                            Name = "Plate Armour"
                        },
                        new
                        {
                            Id = 4,
                            Description = "+1 Armour. While using a Two-Handed weapon, a Shield is only used when being attacked by Ranged Attacks",
                            Name = "Shield"
                        });
                });

            modelBuilder.Entity("ArmyProjectSecond.Models.DbStaticModels.Categories.Categorie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("FractionId")
                        .HasColumnType("integer");

                    b.Property<int?>("Limit")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("FractionId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FractionId = 1,
                            Limit = 40,
                            Name = "Characters"
                        },
                        new
                        {
                            Id = 2,
                            FractionId = 1,
                            Limit = 25,
                            Name = "Core"
                        },
                        new
                        {
                            Id = 3,
                            FractionId = 1,
                            Name = "Special"
                        },
                        new
                        {
                            Id = 4,
                            FractionId = 1,
                            Limit = 35,
                            Name = "Imperial Auxiliaries"
                        },
                        new
                        {
                            Id = 5,
                            FractionId = 1,
                            Limit = 20,
                            Name = "Imperial Armoury"
                        },
                        new
                        {
                            Id = 6,
                            FractionId = 1,
                            Limit = 30,
                            Name = "Sunna's Fury"
                        },
                        new
                        {
                            Id = 666,
                            FractionId = 1,
                            Limit = 500,
                            Name = "None Categoriq"
                        });
                });

            modelBuilder.Entity("ArmyProjectSecond.Models.DbStaticModels.Fraction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Fractions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Empire Of Sonnstahl"
                        },
                        new
                        {
                            Id = 666,
                            Name = "None Fraction"
                        });
                });

            modelBuilder.Entity("ArmyProjectSecond.Models.DbStaticModels.Limits.CharacterMagicPointCoastLimit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CharacterId")
                        .HasColumnType("integer");

                    b.Property<int>("Limit")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CharacterId");

                    b.ToTable("CharacterMagicPointCoastLimit");
                });

            modelBuilder.Entity("ArmyProjectSecond.Models.DbStaticModels.Limits.ModelLimit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("FractionId")
                        .HasColumnType("integer");

                    b.Property<int>("MaxModelCountPerArmy")
                        .HasColumnType("integer");

                    b.Property<int>("UnitId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("FractionId");

                    b.HasIndex("UnitId");

                    b.ToTable("ModelLimit");
                });

            modelBuilder.Entity("ArmyProjectSecond.Models.DbStaticModels.MagicItems.MagicArmour", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("FractioId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("PointCoast")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("FractioId");

                    b.ToTable("MagicArmours");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "The wearer gains +3 Armour and +1 Discipline. The wearer’s unit cannot voluntarily declare Flee as a Charge Reaction",
                            FractioId = 1,
                            Name = "Imperial Seal",
                            PointCoast = 100
                        },
                        new
                        {
                            Id = 2,
                            Description = "The wearer gains +1 Armour and Fear. If taken by a model on foot, the wearer gains an additional +1 Armour",
                            FractioId = 1,
                            Name = "BlackSteel",
                            PointCoast = 45
                        },
                        new
                        {
                            Id = 3,
                            Description = "The bearer gains Aegis (4+, against Magical Attacks) while using this Shield",
                            FractioId = 1,
                            Name = "Witchfire Guard",
                            PointCoast = 35
                        },
                        new
                        {
                            Id = 4,
                            Description = "While using this Shield, the bearer’s model gains Immune (Battle Focus, Lethal Strike",
                            FractioId = 1,
                            Name = "Shield of Volund",
                            PointCoast = 15
                        });
                });

            modelBuilder.Entity("ArmyProjectSecond.Models.DbStaticModels.MagicItems.MagicWeaponUpgrade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("FractioId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("PointCoast")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("FractioId");

                    b.ToTable("MagicWeaponUpgrades");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Attacks made with weapon automatically and always have Armour Penetration 10",
                            FractioId = 1,
                            Name = "The Light of Sonnstahl",
                            PointCoast = 150
                        },
                        new
                        {
                            Id = 2,
                            Description = "Attacks made with this weapon gain Battle Focus. Ifa hit is scored with it against an enemy unit, friendly models with Parent Unit or Support Unit gain Battle Focus with attacks allocated towards the same enemy unit in the same phase in subsequent Initiative Steps.",
                            FractioId = 1,
                            Name = "Deaht Warrant",
                            PointCoast = 60
                        },
                        new
                        {
                            Id = 3,
                            Description = "The bearer’s Attack Value is set to 5 while using this weapon, and attacks made with it gain Battle Focus (against Channel (X))",
                            FractioId = 1,
                            Name = "Hammer of Witches",
                            PointCoast = 45
                        });
                });

            modelBuilder.Entity("ArmyProjectSecond.Models.DbStaticModels.ManyToMany.ArmourToMagicUpgrade", b =>
                {
                    b.Property<int>("ArmourId")
                        .HasColumnType("integer");

                    b.Property<int>("MagicArmourId")
                        .HasColumnType("integer");

                    b.HasKey("ArmourId", "MagicArmourId");

                    b.HasIndex("MagicArmourId");

                    b.ToTable("ArmourToMagicUpgrades", (string)null);
                });

            modelBuilder.Entity("ArmyProjectSecond.Models.DbStaticModels.ManyToMany.ArmourToOption", b =>
                {
                    b.Property<int>("ArmourId")
                        .HasColumnType("integer");

                    b.Property<int>("EqupmentOptionId")
                        .HasColumnType("integer");

                    b.HasKey("ArmourId", "EqupmentOptionId");

                    b.HasIndex("EqupmentOptionId");

                    b.ToTable("ArmourToOptions", (string)null);

                    b.HasData(
                        new
                        {
                            ArmourId = 4,
                            EqupmentOptionId = 1
                        },
                        new
                        {
                            ArmourId = 4,
                            EqupmentOptionId = 8
                        },
                        new
                        {
                            ArmourId = 1,
                            EqupmentOptionId = 13
                        },
                        new
                        {
                            ArmourId = 4,
                            EqupmentOptionId = 14
                        },
                        new
                        {
                            ArmourId = 2,
                            EqupmentOptionId = 15
                        },
                        new
                        {
                            ArmourId = 3,
                            EqupmentOptionId = 16
                        },
                        new
                        {
                            ArmourId = 4,
                            EqupmentOptionId = 23
                        },
                        new
                        {
                            ArmourId = 4,
                            EqupmentOptionId = 34
                        },
                        new
                        {
                            ArmourId = 4,
                            EqupmentOptionId = 37
                        },
                        new
                        {
                            ArmourId = 4,
                            EqupmentOptionId = 40
                        },
                        new
                        {
                            ArmourId = 2,
                            EqupmentOptionId = 44
                        },
                        new
                        {
                            ArmourId = 4,
                            EqupmentOptionId = 45
                        });
                });

            modelBuilder.Entity("ArmyProjectSecond.Models.DbStaticModels.ManyToMany.CloseCombatWeaponToMagicUpgrade", b =>
                {
                    b.Property<int>("CloseCombatWeaponId")
                        .HasColumnType("integer");

                    b.Property<int>("MagicWeaponUpgradeId")
                        .HasColumnType("integer");

                    b.HasKey("CloseCombatWeaponId", "MagicWeaponUpgradeId");

                    b.HasIndex("MagicWeaponUpgradeId");

                    b.ToTable("CloseCombatWeaponToMagicUpgrades", (string)null);
                });

            modelBuilder.Entity("ArmyProjectSecond.Models.DbStaticModels.ManyToMany.CloseCombatWeaponToOption", b =>
                {
                    b.Property<int>("CloseCombatWeaponId")
                        .HasColumnType("integer");

                    b.Property<int>("EqupmentOptionId")
                        .HasColumnType("integer");

                    b.HasKey("CloseCombatWeaponId", "EqupmentOptionId");

                    b.HasIndex("EqupmentOptionId");

                    b.ToTable("CloseCombatWeaponToOptions", (string)null);

                    b.HasData(
                        new
                        {
                            CloseCombatWeaponId = 1,
                            EqupmentOptionId = 4
                        },
                        new
                        {
                            CloseCombatWeaponId = 2,
                            EqupmentOptionId = 5
                        },
                        new
                        {
                            CloseCombatWeaponId = 4,
                            EqupmentOptionId = 6
                        },
                        new
                        {
                            CloseCombatWeaponId = 6,
                            EqupmentOptionId = 7
                        },
                        new
                        {
                            CloseCombatWeaponId = 1,
                            EqupmentOptionId = 9
                        },
                        new
                        {
                            CloseCombatWeaponId = 2,
                            EqupmentOptionId = 10
                        },
                        new
                        {
                            CloseCombatWeaponId = 4,
                            EqupmentOptionId = 11
                        },
                        new
                        {
                            CloseCombatWeaponId = 8,
                            EqupmentOptionId = 12
                        },
                        new
                        {
                            CloseCombatWeaponId = 6,
                            EqupmentOptionId = 14
                        },
                        new
                        {
                            CloseCombatWeaponId = 1,
                            EqupmentOptionId = 15
                        },
                        new
                        {
                            CloseCombatWeaponId = 6,
                            EqupmentOptionId = 27
                        },
                        new
                        {
                            CloseCombatWeaponId = 1,
                            EqupmentOptionId = 28
                        },
                        new
                        {
                            CloseCombatWeaponId = 2,
                            EqupmentOptionId = 29
                        },
                        new
                        {
                            CloseCombatWeaponId = 2,
                            EqupmentOptionId = 30
                        },
                        new
                        {
                            CloseCombatWeaponId = 7,
                            EqupmentOptionId = 31
                        },
                        new
                        {
                            CloseCombatWeaponId = 1,
                            EqupmentOptionId = 35
                        },
                        new
                        {
                            CloseCombatWeaponId = 4,
                            EqupmentOptionId = 36
                        },
                        new
                        {
                            CloseCombatWeaponId = 4,
                            EqupmentOptionId = 38
                        },
                        new
                        {
                            CloseCombatWeaponId = 8,
                            EqupmentOptionId = 39
                        },
                        new
                        {
                            CloseCombatWeaponId = 1,
                            EqupmentOptionId = 41
                        },
                        new
                        {
                            CloseCombatWeaponId = 2,
                            EqupmentOptionId = 42
                        },
                        new
                        {
                            CloseCombatWeaponId = 4,
                            EqupmentOptionId = 43
                        },
                        new
                        {
                            CloseCombatWeaponId = 5,
                            EqupmentOptionId = 44
                        });
                });

            modelBuilder.Entity("ArmyProjectSecond.Models.DbStaticModels.ManyToMany.CommandGroupOptionToUnit", b =>
                {
                    b.Property<int>("CommandGroupUpgradeOptionsId")
                        .HasColumnType("integer");

                    b.Property<int>("UnitsId")
                        .HasColumnType("integer");

                    b.Property<int>("CommandGroupId")
                        .HasColumnType("integer");

                    b.Property<int>("UnitId")
                        .HasColumnType("integer");

                    b.HasKey("CommandGroupUpgradeOptionsId", "UnitsId");

                    b.HasIndex("UnitsId");

                    b.ToTable("CommandGroupOptionToUnits", (string)null);
                });

            modelBuilder.Entity("ArmyProjectSecond.Models.DbStaticModels.ManyToMany.RangeWeaponToMagicUpgade", b =>
                {
                    b.Property<int>("MagicWeaponUpgradeId")
                        .HasColumnType("integer");

                    b.Property<int>("RangeWeaponId")
                        .HasColumnType("integer");

                    b.HasKey("MagicWeaponUpgradeId", "RangeWeaponId");

                    b.HasIndex("RangeWeaponId");

                    b.ToTable("RangeWeaponToMagicUpgades", (string)null);
                });

            modelBuilder.Entity("ArmyProjectSecond.Models.DbStaticModels.ManyToMany.RangeWeaponToOption", b =>
                {
                    b.Property<int>("EqupmentOptionId")
                        .HasColumnType("integer");

                    b.Property<int>("RangeWeaponId")
                        .HasColumnType("integer");

                    b.HasKey("EqupmentOptionId", "RangeWeaponId");

                    b.HasIndex("RangeWeaponId");

                    b.ToTable("RangeWeaponToOptions", (string)null);

                    b.HasData(
                        new
                        {
                            EqupmentOptionId = 2,
                            RangeWeaponId = 10
                        },
                        new
                        {
                            EqupmentOptionId = 3,
                            RangeWeaponId = 5
                        },
                        new
                        {
                            EqupmentOptionId = 19,
                            RangeWeaponId = 3
                        },
                        new
                        {
                            EqupmentOptionId = 20,
                            RangeWeaponId = 10
                        },
                        new
                        {
                            EqupmentOptionId = 21,
                            RangeWeaponId = 8
                        },
                        new
                        {
                            EqupmentOptionId = 22,
                            RangeWeaponId = 9
                        },
                        new
                        {
                            EqupmentOptionId = 24,
                            RangeWeaponId = 2
                        },
                        new
                        {
                            EqupmentOptionId = 25,
                            RangeWeaponId = 7
                        },
                        new
                        {
                            EqupmentOptionId = 26,
                            RangeWeaponId = 10
                        },
                        new
                        {
                            EqupmentOptionId = 32,
                            RangeWeaponId = 3
                        },
                        new
                        {
                            EqupmentOptionId = 33,
                            RangeWeaponId = 2
                        },
                        new
                        {
                            EqupmentOptionId = 45,
                            RangeWeaponId = 5
                        },
                        new
                        {
                            EqupmentOptionId = 46,
                            RangeWeaponId = 7
                        },
                        new
                        {
                            EqupmentOptionId = 47,
                            RangeWeaponId = 10
                        });
                });

            modelBuilder.Entity("ArmyProjectSecond.Models.DbStaticModels.Option.CommandGroupUpgradeOption", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("ParrentUpgradeOptionId")
                        .HasColumnType("integer");

                    b.Property<int>("UpgradeCoast")
                        .HasColumnType("integer");

                    b.Property<string>("UpgradeName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ParrentUpgradeOptionId");

                    b.ToTable("CommandGroupUpgradeOptions");
                });

            modelBuilder.Entity("ArmyProjectSecond.Models.DbStaticModels.Option.EqupmentOption", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("OptionCoast")
                        .HasColumnType("integer");

                    b.Property<int>("UnitId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UnitId");

                    b.ToTable("WeaponOptions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            OptionCoast = 10,
                            UnitId = 1
                        },
                        new
                        {
                            Id = 2,
                            OptionCoast = 5,
                            UnitId = 1
                        },
                        new
                        {
                            Id = 3,
                            OptionCoast = 10,
                            UnitId = 1
                        },
                        new
                        {
                            Id = 4,
                            OptionCoast = 5,
                            UnitId = 1
                        },
                        new
                        {
                            Id = 5,
                            OptionCoast = 5,
                            UnitId = 1
                        },
                        new
                        {
                            Id = 6,
                            OptionCoast = 5,
                            UnitId = 1
                        },
                        new
                        {
                            Id = 7,
                            OptionCoast = 5,
                            UnitId = 1
                        },
                        new
                        {
                            Id = 8,
                            OptionCoast = 5,
                            UnitId = 2
                        },
                        new
                        {
                            Id = 9,
                            OptionCoast = 5,
                            UnitId = 2
                        },
                        new
                        {
                            Id = 10,
                            OptionCoast = 5,
                            UnitId = 2
                        },
                        new
                        {
                            Id = 11,
                            OptionCoast = 10,
                            UnitId = 2
                        },
                        new
                        {
                            Id = 12,
                            OptionCoast = 30,
                            UnitId = 2
                        },
                        new
                        {
                            Id = 13,
                            OptionCoast = 5,
                            UnitId = 3
                        },
                        new
                        {
                            Id = 14,
                            OptionCoast = 15,
                            UnitId = 4
                        },
                        new
                        {
                            Id = 15,
                            OptionCoast = 0,
                            UnitId = 4
                        },
                        new
                        {
                            Id = 16,
                            OptionCoast = 25,
                            UnitId = 4
                        },
                        new
                        {
                            Id = 17,
                            OptionCoast = 5,
                            UnitId = 4
                        },
                        new
                        {
                            Id = 18,
                            OptionCoast = 15,
                            UnitId = 4
                        },
                        new
                        {
                            Id = 19,
                            OptionCoast = 5,
                            UnitId = 5
                        },
                        new
                        {
                            Id = 20,
                            OptionCoast = 5,
                            UnitId = 5
                        },
                        new
                        {
                            Id = 21,
                            OptionCoast = 10,
                            UnitId = 5
                        },
                        new
                        {
                            Id = 22,
                            OptionCoast = 10,
                            UnitId = 5
                        },
                        new
                        {
                            Id = 23,
                            OptionCoast = 5,
                            UnitId = 6
                        },
                        new
                        {
                            Id = 24,
                            OptionCoast = 5,
                            UnitId = 6
                        },
                        new
                        {
                            Id = 25,
                            OptionCoast = 15,
                            UnitId = 6
                        },
                        new
                        {
                            Id = 26,
                            OptionCoast = 25,
                            UnitId = 6
                        },
                        new
                        {
                            Id = 27,
                            OptionCoast = 5,
                            UnitId = 6
                        },
                        new
                        {
                            Id = 28,
                            OptionCoast = 10,
                            UnitId = 6
                        },
                        new
                        {
                            Id = 29,
                            OptionCoast = 10,
                            UnitId = 6
                        },
                        new
                        {
                            Id = 30,
                            OptionCoast = 1,
                            UnitId = 7
                        },
                        new
                        {
                            Id = 31,
                            OptionCoast = 1,
                            UnitId = 7
                        },
                        new
                        {
                            Id = 32,
                            OptionCoast = 0,
                            UnitId = 8
                        },
                        new
                        {
                            Id = 33,
                            OptionCoast = 1,
                            UnitId = 8
                        },
                        new
                        {
                            Id = 34,
                            OptionCoast = 4,
                            UnitId = 10
                        },
                        new
                        {
                            Id = 35,
                            OptionCoast = 1,
                            UnitId = 10
                        },
                        new
                        {
                            Id = 36,
                            OptionCoast = 1,
                            UnitId = 10
                        },
                        new
                        {
                            Id = 37,
                            OptionCoast = 4,
                            UnitId = 11
                        },
                        new
                        {
                            Id = 38,
                            OptionCoast = 1,
                            UnitId = 11
                        },
                        new
                        {
                            Id = 39,
                            OptionCoast = 1,
                            UnitId = 11
                        },
                        new
                        {
                            Id = 40,
                            OptionCoast = 0,
                            UnitId = 12
                        },
                        new
                        {
                            Id = 41,
                            OptionCoast = 2,
                            UnitId = 12
                        },
                        new
                        {
                            Id = 42,
                            OptionCoast = 0,
                            UnitId = 13
                        },
                        new
                        {
                            Id = 43,
                            OptionCoast = 10,
                            UnitId = 13
                        },
                        new
                        {
                            Id = 44,
                            OptionCoast = 3,
                            UnitId = 16
                        },
                        new
                        {
                            Id = 45,
                            OptionCoast = 0,
                            UnitId = 16
                        },
                        new
                        {
                            Id = 46,
                            OptionCoast = 5,
                            UnitId = 16
                        },
                        new
                        {
                            Id = 47,
                            OptionCoast = 6,
                            UnitId = 16
                        });
                });

            modelBuilder.Entity("ArmyProjectSecond.Models.DbStaticModels.Option.MountOption", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("CategorieId")
                        .IsRequired()
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("PointCoast")
                        .HasColumnType("integer");

                    b.Property<int>("UnitId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CategorieId");

                    b.HasIndex("UnitId");

                    b.ToTable("MountOptions");
                });

            modelBuilder.Entity("ArmyProjectSecond.Models.DbStaticModels.Units.BaseUnit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CategorieId")
                        .HasColumnType("integer");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("FractionId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("StartPointCoast")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CategorieId");

                    b.HasIndex("FractionId");

                    b.ToTable("BaseUnit");

                    b.HasDiscriminator<string>("Discriminator").HasValue("BaseUnit");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("ArmyProjectSecond.Models.DbStaticModels.Weapon.CloseCombatWeapon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("CloseCombatWeapons");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Two-Handed. Attacks made with a Great Weapon gain +2 Strength, +2 Armour Penetration, and strike at Initiative Step 0 (regardless of the wielder’s Agility)",
                            Name = "Great Weapon"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Two-Handed. Attacks made with a Halberd gain +1Strength and +1 Armour Penetration",
                            Name = "Halbred"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Gains Parry if model have Shield",
                            Name = "Hand Weapon"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Attacks made with a Lance and allocated towards models in the wielder’s Front Facing gain Devastating Charge (+2 Strength, +2 Armour Penetration). Infantry cannot use Lance",
                            Name = "Lance"
                        },
                        new
                        {
                            Id = 5,
                            Description = "Attacks made with a Light Lance and allocated towards models in the wielder’s Front Facing gain Devastating Charge (+1 Strength, +1 Armour Penetration).Infantry cannot use Light Lances.",
                            Name = "Light Lance"
                        },
                        new
                        {
                            Id = 6,
                            Description = "Two-Handed. The wielder gains +1 Attack Value and +1 Offensive Skill when using Paired Weapons.Attacks made with Paired Weapons ignore Parry (while PairedWeapons are often modelled as two Hand Weapons,they are considered a separate weapon category for rules purposes).",
                            Name = "Paried Weapons"
                        },
                        new
                        {
                            Id = 7,
                            Description = "Attacks made with a Spear gain Fight in Extra Rank and +1 Armour Penetration. In addition, unless theattacking model’s unit is Charging or is Engaged in anyFlank or Rear Facing, attacks made with a Spear gain +2Agility and an additional +1 Armour Penetration in theFirst Round of Combat. Only Infantry can use Spears.",
                            Name = "Spear"
                        },
                        new
                        {
                            Id = 8,
                            Description = "Attacks made with this weapon gain +2 Armour Penetration",
                            Name = "Cavalry Peak"
                        });
                });

            modelBuilder.Entity("ArmyProjectSecond.Models.DbStaticModels.Weapon.RangeWeapon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ArmourPenetration")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("AttackAttributes")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Range")
                        .HasColumnType("integer");

                    b.Property<int>("Shots")
                        .HasColumnType("integer");

                    b.Property<string>("Strength")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("RangeWeapons");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ArmourPenetration = "0",
                            AttackAttributes = "Volley Fire",
                            Name = "Bow",
                            Range = 24,
                            Shots = 1,
                            Strength = "3"
                        },
                        new
                        {
                            Id = 2,
                            ArmourPenetration = "1",
                            AttackAttributes = "Unwieldy",
                            Name = "Crossbow",
                            Range = 30,
                            Shots = 1,
                            Strength = "4"
                        },
                        new
                        {
                            Id = 3,
                            ArmourPenetration = "2",
                            AttackAttributes = "Unwieldy",
                            Name = "Handgun",
                            Range = 24,
                            Shots = 1,
                            Strength = "4"
                        },
                        new
                        {
                            Id = 4,
                            ArmourPenetration = "0",
                            AttackAttributes = "Volley Fire",
                            Name = "Longbow",
                            Range = 30,
                            Shots = 1,
                            Strength = "3"
                        },
                        new
                        {
                            Id = 5,
                            ArmourPenetration = "2",
                            AttackAttributes = "Quick to Fire",
                            Name = "Pistol",
                            Range = 12,
                            Shots = 1,
                            Strength = "4"
                        },
                        new
                        {
                            Id = 6,
                            ArmourPenetration = "as user",
                            AttackAttributes = "Accurate,Quick to Fire",
                            Name = "Throwing Weapons",
                            Range = 8,
                            Shots = 2,
                            Strength = "as user"
                        },
                        new
                        {
                            Id = 7,
                            ArmourPenetration = "2",
                            AttackAttributes = "Quick to Fire.Counts as Paried Weapons in close combat",
                            Name = "Brace of Pistols",
                            Range = 12,
                            Shots = 2,
                            Strength = "4"
                        },
                        new
                        {
                            Id = 8,
                            ArmourPenetration = "3",
                            AttackAttributes = "Multiple Wounds (2, against Standard), Unwieldy",
                            Name = "Long Rifle",
                            Range = 48,
                            Shots = 1,
                            Strength = "5"
                        },
                        new
                        {
                            Id = 9,
                            ArmourPenetration = "2",
                            AttackAttributes = "Unwieldy",
                            Name = "Repeater Gun",
                            Range = 48,
                            Shots = 3,
                            Strength = "4"
                        },
                        new
                        {
                            Id = 10,
                            ArmourPenetration = "2",
                            AttackAttributes = "Quick to Fire. If the model is also equipped with a Pistol , this weapon gains Shots 4",
                            Name = "Reapeater Pistol",
                            Range = 12,
                            Shots = 3,
                            Strength = "4"
                        });
                });

            modelBuilder.Entity("MagicBanner", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("CategorieId")
                        .IsRequired()
                        .HasColumnType("integer");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("FractioId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("PointCoast")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CategorieId");

                    b.HasIndex("FractioId");

                    b.ToTable("MagicBanners");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategorieId = 666,
                            Description = "If the General is part of the bearer’s unit, it gains Commanding Presence (+6)",
                            FractioId = 1,
                            Name = "Household Standart",
                            PointCoast = 45
                        },
                        new
                        {
                            Id = 2,
                            CategorieId = 1,
                            Description = "Whenever the bearer’s unit is targeted by an Order, it may immediately give an Order to a single Support Unit within 8 of the bearer’s unit",
                            FractioId = 1,
                            Name = "Banner of Unity",
                            PointCoast = 45
                        },
                        new
                        {
                            Id = 3,
                            CategorieId = 666,
                            Description = "The bearer's unit gains Steady Aim",
                            FractioId = 1,
                            Name = "Marksman's Pennant",
                            PointCoast = 10
                        });
                });

            modelBuilder.Entity("ArmyProjectSecond.Models.DbStaticModels.Units.Character", b =>
                {
                    b.HasBaseType("ArmyProjectSecond.Models.DbStaticModels.Units.BaseUnit");

                    b.HasDiscriminator().HasValue("Character");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategorieId = 1,
                            FractionId = 1,
                            Name = "Marshal",
                            StartPointCoast = 140
                        },
                        new
                        {
                            Id = 2,
                            CategorieId = 1,
                            FractionId = 1,
                            Name = "Knight Commander",
                            StartPointCoast = 175
                        },
                        new
                        {
                            Id = 3,
                            CategorieId = 1,
                            FractionId = 1,
                            Name = "Wizard",
                            StartPointCoast = 115
                        },
                        new
                        {
                            Id = 4,
                            CategorieId = 1,
                            FractionId = 1,
                            Name = "Prelate",
                            StartPointCoast = 145
                        },
                        new
                        {
                            Id = 5,
                            CategorieId = 1,
                            FractionId = 1,
                            Name = "Artificer",
                            StartPointCoast = 120
                        },
                        new
                        {
                            Id = 6,
                            CategorieId = 1,
                            FractionId = 1,
                            Name = "Inquisitor",
                            StartPointCoast = 95
                        });
                });

            modelBuilder.Entity("ArmyProjectSecond.Models.DbStaticModels.Units.MultiModelUnit", b =>
                {
                    b.HasBaseType("ArmyProjectSecond.Models.DbStaticModels.Units.BaseUnit");

                    b.Property<int>("MaxUnitSize")
                        .HasColumnType("integer");

                    b.Property<int>("PointCostPerAdditionalFigure")
                        .HasColumnType("integer");

                    b.Property<int>("StartUnitSize")
                        .HasColumnType("integer");

                    b.HasDiscriminator().HasValue("MultiModelUnit");

                    b.HasData(
                        new
                        {
                            Id = 7,
                            CategorieId = 2,
                            FractionId = 1,
                            Name = "Heavy Infantry",
                            StartPointCoast = 140,
                            MaxUnitSize = 50,
                            PointCostPerAdditionalFigure = 7,
                            StartUnitSize = 20
                        },
                        new
                        {
                            Id = 8,
                            CategorieId = 2,
                            FractionId = 1,
                            Name = "Light Infantry",
                            StartPointCoast = 130,
                            MaxUnitSize = 20,
                            PointCostPerAdditionalFigure = 13,
                            StartUnitSize = 10
                        },
                        new
                        {
                            Id = 9,
                            CategorieId = 2,
                            FractionId = 1,
                            Name = "State Milita",
                            StartPointCoast = 140,
                            MaxUnitSize = 25,
                            PointCostPerAdditionalFigure = 6,
                            StartUnitSize = 10
                        },
                        new
                        {
                            Id = 10,
                            CategorieId = 2,
                            FractionId = 1,
                            Name = "Electoral Cavalry",
                            StartPointCoast = 155,
                            MaxUnitSize = 20,
                            PointCostPerAdditionalFigure = 23,
                            StartUnitSize = 5
                        },
                        new
                        {
                            Id = 11,
                            CategorieId = 2,
                            FractionId = 1,
                            Name = "Knightly Orders",
                            StartPointCoast = 195,
                            MaxUnitSize = 15,
                            PointCostPerAdditionalFigure = 31,
                            StartUnitSize = 5
                        },
                        new
                        {
                            Id = 12,
                            CategorieId = 3,
                            FractionId = 1,
                            Name = "Imperial Guard",
                            StartPointCoast = 170,
                            MaxUnitSize = 40,
                            PointCostPerAdditionalFigure = 17,
                            StartUnitSize = 15
                        },
                        new
                        {
                            Id = 13,
                            CategorieId = 3,
                            FractionId = 1,
                            Name = "Knights of the Sun Griffon",
                            StartPointCoast = 275,
                            MaxUnitSize = 6,
                            PointCostPerAdditionalFigure = 59,
                            StartUnitSize = 3
                        },
                        new
                        {
                            Id = 15,
                            CategorieId = 4,
                            FractionId = 1,
                            Name = "Imperial Rangers",
                            StartPointCoast = 90,
                            MaxUnitSize = 10,
                            PointCostPerAdditionalFigure = 11,
                            StartUnitSize = 5
                        },
                        new
                        {
                            Id = 16,
                            CategorieId = 4,
                            FractionId = 1,
                            Name = "Reiters",
                            StartPointCoast = 155,
                            MaxUnitSize = 10,
                            PointCostPerAdditionalFigure = 21,
                            StartUnitSize = 5
                        },
                        new
                        {
                            Id = 18,
                            CategorieId = 6,
                            FractionId = 1,
                            Name = "Flagellants",
                            StartPointCoast = 185,
                            MaxUnitSize = 30,
                            PointCostPerAdditionalFigure = 15,
                            StartUnitSize = 15
                        });
                });

            modelBuilder.Entity("ArmyProjectSecond.Models.DbStaticModels.Units.SingleModelUnit", b =>
                {
                    b.HasBaseType("ArmyProjectSecond.Models.DbStaticModels.Units.BaseUnit");

                    b.HasDiscriminator().HasValue("SingleModelUnit");

                    b.HasData(
                        new
                        {
                            Id = 14,
                            CategorieId = 3,
                            FractionId = 1,
                            Name = "Arcane Engine",
                            StartPointCoast = 255
                        },
                        new
                        {
                            Id = 17,
                            CategorieId = 5,
                            FractionId = 1,
                            Name = "Artillerry",
                            StartPointCoast = 150
                        },
                        new
                        {
                            Id = 19,
                            CategorieId = 6,
                            FractionId = 1,
                            Name = "Steam Tank",
                            StartPointCoast = 450
                        });
                });

            modelBuilder.Entity("ArmyProjectSecond.Models.DbStaticModels.Categories.Categorie", b =>
                {
                    b.HasOne("ArmyProjectSecond.Models.DbStaticModels.Fraction", "Fraction")
                        .WithMany("Categories")
                        .HasForeignKey("FractionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Fraction");
                });

            modelBuilder.Entity("ArmyProjectSecond.Models.DbStaticModels.Limits.CharacterMagicPointCoastLimit", b =>
                {
                    b.HasOne("ArmyProjectSecond.Models.DbStaticModels.Units.Character", "Character")
                        .WithMany("MagicLimits")
                        .HasForeignKey("CharacterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Character");
                });

            modelBuilder.Entity("ArmyProjectSecond.Models.DbStaticModels.Limits.ModelLimit", b =>
                {
                    b.HasOne("ArmyProjectSecond.Models.DbStaticModels.Fraction", null)
                        .WithMany("Limits")
                        .HasForeignKey("FractionId");

                    b.HasOne("ArmyProjectSecond.Models.DbStaticModels.Units.BaseUnit", "Unit")
                        .WithMany()
                        .HasForeignKey("UnitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Unit");
                });

            modelBuilder.Entity("ArmyProjectSecond.Models.DbStaticModels.MagicItems.MagicArmour", b =>
                {
                    b.HasOne("ArmyProjectSecond.Models.DbStaticModels.Fraction", "Fraction")
                        .WithMany()
                        .HasForeignKey("FractioId");

                    b.Navigation("Fraction");
                });

            modelBuilder.Entity("ArmyProjectSecond.Models.DbStaticModels.MagicItems.MagicWeaponUpgrade", b =>
                {
                    b.HasOne("ArmyProjectSecond.Models.DbStaticModels.Fraction", "Fraction")
                        .WithMany()
                        .HasForeignKey("FractioId");

                    b.Navigation("Fraction");
                });

            modelBuilder.Entity("ArmyProjectSecond.Models.DbStaticModels.ManyToMany.ArmourToMagicUpgrade", b =>
                {
                    b.HasOne("ArmyProjectSecond.Models.Armours.Armour", null)
                        .WithMany()
                        .HasForeignKey("ArmourId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ArmyProjectSecond.Models.DbStaticModels.MagicItems.MagicArmour", null)
                        .WithMany()
                        .HasForeignKey("MagicArmourId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ArmyProjectSecond.Models.DbStaticModels.ManyToMany.ArmourToOption", b =>
                {
                    b.HasOne("ArmyProjectSecond.Models.Armours.Armour", null)
                        .WithMany()
                        .HasForeignKey("ArmourId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ArmyProjectSecond.Models.DbStaticModels.Option.EqupmentOption", null)
                        .WithMany()
                        .HasForeignKey("EqupmentOptionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ArmyProjectSecond.Models.DbStaticModels.ManyToMany.CloseCombatWeaponToMagicUpgrade", b =>
                {
                    b.HasOne("ArmyProjectSecond.Models.DbStaticModels.Weapon.CloseCombatWeapon", null)
                        .WithMany()
                        .HasForeignKey("CloseCombatWeaponId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ArmyProjectSecond.Models.DbStaticModels.MagicItems.MagicWeaponUpgrade", null)
                        .WithMany()
                        .HasForeignKey("MagicWeaponUpgradeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ArmyProjectSecond.Models.DbStaticModels.ManyToMany.CloseCombatWeaponToOption", b =>
                {
                    b.HasOne("ArmyProjectSecond.Models.DbStaticModels.Weapon.CloseCombatWeapon", null)
                        .WithMany()
                        .HasForeignKey("CloseCombatWeaponId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ArmyProjectSecond.Models.DbStaticModels.Option.EqupmentOption", null)
                        .WithMany()
                        .HasForeignKey("EqupmentOptionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ArmyProjectSecond.Models.DbStaticModels.ManyToMany.CommandGroupOptionToUnit", b =>
                {
                    b.HasOne("ArmyProjectSecond.Models.DbStaticModels.Option.CommandGroupUpgradeOption", null)
                        .WithMany()
                        .HasForeignKey("CommandGroupUpgradeOptionsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ArmyProjectSecond.Models.DbStaticModels.Units.MultiModelUnit", null)
                        .WithMany()
                        .HasForeignKey("UnitsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ArmyProjectSecond.Models.DbStaticModels.ManyToMany.RangeWeaponToMagicUpgade", b =>
                {
                    b.HasOne("ArmyProjectSecond.Models.DbStaticModels.MagicItems.MagicWeaponUpgrade", null)
                        .WithMany()
                        .HasForeignKey("MagicWeaponUpgradeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ArmyProjectSecond.Models.DbStaticModels.Weapon.RangeWeapon", null)
                        .WithMany()
                        .HasForeignKey("RangeWeaponId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ArmyProjectSecond.Models.DbStaticModels.ManyToMany.RangeWeaponToOption", b =>
                {
                    b.HasOne("ArmyProjectSecond.Models.DbStaticModels.Option.EqupmentOption", null)
                        .WithMany()
                        .HasForeignKey("EqupmentOptionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ArmyProjectSecond.Models.DbStaticModels.Weapon.RangeWeapon", null)
                        .WithMany()
                        .HasForeignKey("RangeWeaponId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ArmyProjectSecond.Models.DbStaticModels.Option.CommandGroupUpgradeOption", b =>
                {
                    b.HasOne("ArmyProjectSecond.Models.DbStaticModels.Option.CommandGroupUpgradeOption", "ParrentUpgradeOption")
                        .WithMany("ChildUpgrades")
                        .HasForeignKey("ParrentUpgradeOptionId");

                    b.Navigation("ParrentUpgradeOption");
                });

            modelBuilder.Entity("ArmyProjectSecond.Models.DbStaticModels.Option.EqupmentOption", b =>
                {
                    b.HasOne("ArmyProjectSecond.Models.DbStaticModels.Units.BaseUnit", "Unit")
                        .WithMany("UnitOptions")
                        .HasForeignKey("UnitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Unit");
                });

            modelBuilder.Entity("ArmyProjectSecond.Models.DbStaticModels.Option.MountOption", b =>
                {
                    b.HasOne("ArmyProjectSecond.Models.DbStaticModels.Categories.Categorie", "Categorie")
                        .WithMany()
                        .HasForeignKey("CategorieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ArmyProjectSecond.Models.DbStaticModels.Units.Character", "Owner")
                        .WithMany("CharacterMountOPtions")
                        .HasForeignKey("UnitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categorie");

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("ArmyProjectSecond.Models.DbStaticModels.Units.BaseUnit", b =>
                {
                    b.HasOne("ArmyProjectSecond.Models.DbStaticModels.Categories.Categorie", "Categorie")
                        .WithMany("CategorieUnit")
                        .HasForeignKey("CategorieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ArmyProjectSecond.Models.DbStaticModels.Fraction", "Fraction")
                        .WithMany("FractionUnits")
                        .HasForeignKey("FractionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categorie");

                    b.Navigation("Fraction");
                });

            modelBuilder.Entity("MagicBanner", b =>
                {
                    b.HasOne("ArmyProjectSecond.Models.DbStaticModels.Categories.Categorie", "Categorie")
                        .WithMany()
                        .HasForeignKey("CategorieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ArmyProjectSecond.Models.DbStaticModels.Fraction", "Fraction")
                        .WithMany()
                        .HasForeignKey("FractioId");

                    b.Navigation("Categorie");

                    b.Navigation("Fraction");
                });

            modelBuilder.Entity("ArmyProjectSecond.Models.DbStaticModels.Categories.Categorie", b =>
                {
                    b.Navigation("CategorieUnit");
                });

            modelBuilder.Entity("ArmyProjectSecond.Models.DbStaticModels.Fraction", b =>
                {
                    b.Navigation("Categories");

                    b.Navigation("FractionUnits");

                    b.Navigation("Limits");
                });

            modelBuilder.Entity("ArmyProjectSecond.Models.DbStaticModels.Option.CommandGroupUpgradeOption", b =>
                {
                    b.Navigation("ChildUpgrades");
                });

            modelBuilder.Entity("ArmyProjectSecond.Models.DbStaticModels.Units.BaseUnit", b =>
                {
                    b.Navigation("UnitOptions");
                });

            modelBuilder.Entity("ArmyProjectSecond.Models.DbStaticModels.Units.Character", b =>
                {
                    b.Navigation("CharacterMountOPtions");

                    b.Navigation("MagicLimits");
                });
#pragma warning restore 612, 618
        }
    }
}
